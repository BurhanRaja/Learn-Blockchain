{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc50149ddbc841f55623de25acf21d8be49cb334a07f174f05a65a9ca16c52e2c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "838517",
    "logsBloom": "0x
    "blockHash": "0x019727e0679cc5330466fc0d876146a95554f42f8179e34b06e5bf41e3be2a78",
    "transactionHash": "0xc50149ddbc841f55623de25acf21d8be49cb334a07f174f05a65a9ca16c52e2c",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "838517",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "ba92c452c0b4fb49cfef22203ac370d0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Burhan Raja\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A Smart Contract for Crowd Funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.18;\\n\\nimport {PriceConverter} from \\\"./PriceConverter.sol\\\";\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/// @title A Smart Contract for Crowd Funding\\n/// @author Burhan Raja\\n/// @notice\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 4e18;\\n    AggregatorV3Interface public priceFeed; // PriceFeed Aggregator\\n    address public immutable i_owner;\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Get Price feed address\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    // What if someone send money to us without initiating fund function\\n\\n    // recieve()\\n    // fallback()\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"didn't send enough ETH.\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] =\\n            addressToAmountFunded[msg.sender] +\\n            msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 i = 0;\\n        for (i; i < funders.length; i++) {\\n            addressToAmountFunded[funders[i]] = 0;\\n        }\\n        // resetting the array\\n        funders = new address[](0);\\n        // Withdraw all the ETH balance\\n\\n        // ? transfer - limited Gas and throws Error\\n        // payable(msg.sender).transfer(address(this).balance);\\n\\n        // ? send - limited Gas and returns bool\\n        // ? bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // ? require(sendSuccess, \\\"Send Failed\\\");\\n\\n        // call - All Gas and returns bool\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x279d4810aff37afb4570da45f2aef00afbd118c8ae92a9e57d962e455a6d7f00\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.18;\\r\\n\\r\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary PriceConverter {\\r\\n    // Get price from the Aggregator interface\\r\\n    function getPrice(\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) private view returns (uint256) {\\r\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e18);\\r\\n    }\\r\\n\\r\\n    // Get Conversion Rate for the amount of ETH added\\r\\n    function getConversionRate(\\r\\n        uint256 ethAmount,\\r\\n        AggregatorV3Interface priceFeed\\r\\n    ) internal view returns (uint256) {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUSD = (ethPrice * ethAmount) / 1e18;\\r\\n        return ethAmountInUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6d0b49cdb846f8140db28f88a0673773c337cf47787c66576137bc43be4c1e75\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f25380380610f258339818101604052810190610032919061010f565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dc826100b1565b9050919050565b6100ec816100d1565b81146100f757600080fd5b50565b600081519050610109816100e3565b92915050565b600060208284031215610125576101246100ac565b5b6000610133848285016100fa565b91505092915050565b608051610dc761015e6000396000818161031b015261059e0152610dc76000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a2610319565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107d9565b610554565b6040516100d8919061081f565b60405180910390f35b3480156100ed57600080fd5b506100f661056c565b604051610103919061081f565b60405180910390f35b34801561011857600080fd5b50610121610578565b60405161012e9190610899565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661059c565b60405161016391906108c3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061090a565b6105c0565b6040516101a091906108c3565b60405180910390f35b673782dace9d9000006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ff90919063ffffffff16565b1015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610994565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d491906109e3565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044457600060026000600184815481106103c8576103c7610a17565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061043c90610a46565b9150506103a1565b600067ffffffffffffffff81111561045f5761045e610a8e565b5b60405190808252806020026020018201604052801561048d5781602001602082028036833780820191505090505b50600190805190602001906104a39291906106cf565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ca90610aee565b60006040518083038185875af1925050503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b5050905080610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b4f565b60405180910390fd5b5050565b60026020528060005260406000206000915090505481565b673782dace9d90000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060b8361063b565b90506000670de0b6b3a764000085836106249190610b6f565b61062e9190610be0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190610c9e565b505050915050670de0b6b3a7640000816106c79190610d19565b915050919050565b828054828255906000526020600020908101928215610748579160200282015b828111156107475782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ef565b5b5090506107559190610759565b5090565b5b8082111561077257600081600090555060010161075a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a68261077b565b9050919050565b6107b68161079b565b81146107c157600080fd5b50565b6000813590506107d3816107ad565b92915050565b6000602082840312156107ef576107ee610776565b5b60006107fd848285016107c4565b91505092915050565b6000819050919050565b61081981610806565b82525050565b60006020820190506108346000830184610810565b92915050565b6000819050919050565b600061085f61085a6108558461077b565b61083a565b61077b565b9050919050565b600061087182610844565b9050919050565b600061088382610866565b9050919050565b61089381610878565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd8161079b565b82525050565b60006020820190506108d860008301846108b4565b92915050565b6108e781610806565b81146108f257600080fd5b50565b600081359050610904816108de565b92915050565b6000602082840312156109205761091f610776565b5b600061092e848285016108f5565b91505092915050565b600082825260208201905092915050565b7f6469646e27742073656e6420656e6f756768204554482e000000000000000000600082015250565b600061097e601783610937565b915061098982610948565b602082019050919050565b600060208201905081810360008301526109ad81610971565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ee82610806565b91506109f983610806565b9250828201905080821115610a1157610a106109b4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5182610806565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8357610a826109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad8600083610abd565b9150610ae382610ac8565b600082019050919050565b6000610af982610acb565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b39600b83610937565b9150610b4482610b03565b602082019050919050565b60006020820190508181036000830152610b6881610b2c565b9050919050565b6000610b7a82610806565b9150610b8583610806565b9250828202610b9381610806565b91508282048414831517610baa57610ba96109b4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610beb82610806565b9150610bf683610806565b925082610c0657610c05610bb1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3081610c11565b8114610c3b57600080fd5b50565b600081519050610c4d81610c27565b92915050565b6000819050919050565b610c6681610c53565b8114610c7157600080fd5b50565b600081519050610c8381610c5d565b92915050565b600081519050610c98816108de565b92915050565b600080600080600060a08688031215610cba57610cb9610776565b5b6000610cc888828901610c3e565b9550506020610cd988828901610c74565b9450506040610cea88828901610c89565b9350506060610cfb88828901610c89565b9250506080610d0c88828901610c3e565b9150509295509295909350565b6000610d2482610c53565b9150610d2f83610c53565b9250828202610d3d81610c53565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7557610d746109b4565b5b8282058414831517610d8a57610d896109b4565b5b509291505056fea2646970667358221220cd1678899806cc7a35a23c780399f4682d5d6071c76a9e52a0b703aa935f9b1464736f6c63430008130033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a2610319565b005b3480156100b057600080fd5b506100cb60048036038101906100c691906107d9565b610554565b6040516100d8919061081f565b60405180910390f35b3480156100ed57600080fd5b506100f661056c565b604051610103919061081f565b60405180910390f35b34801561011857600080fd5b50610121610578565b60405161012e9190610899565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b5061015661059c565b60405161016391906108c3565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e919061090a565b6105c0565b6040516101a091906108c3565b60405180910390f35b673782dace9d9000006101e560008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105ff90919063ffffffff16565b1015610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021d90610994565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546102d491906109e3565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044457600060026000600184815481106103c8576103c7610a17565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061043c90610a46565b9150506103a1565b600067ffffffffffffffff81111561045f5761045e610a8e565b5b60405190808252806020026020018201604052801561048d5781602001602082028036833780820191505090505b50600190805190602001906104a39291906106cf565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104ca90610aee565b60006040518083038185875af1925050503d8060008114610507576040519150601f19603f3d011682016040523d82523d6000602084013e61050c565b606091505b5050905080610550576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054790610b4f565b60405180910390fd5b5050565b60026020528060005260406000206000915090505481565b673782dace9d90000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600181815481106105d057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061060b8361063b565b90506000670de0b6b3a764000085836106249190610b6f565b61062e9190610be0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610689573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ad9190610c9e565b505050915050670de0b6b3a7640000816106c79190610d19565b915050919050565b828054828255906000526020600020908101928215610748579160200282015b828111156107475782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106ef565b5b5090506107559190610759565b5090565b5b8082111561077257600081600090555060010161075a565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a68261077b565b9050919050565b6107b68161079b565b81146107c157600080fd5b50565b6000813590506107d3816107ad565b92915050565b6000602082840312156107ef576107ee610776565b5b60006107fd848285016107c4565b91505092915050565b6000819050919050565b61081981610806565b82525050565b60006020820190506108346000830184610810565b92915050565b6000819050919050565b600061085f61085a6108558461077b565b61083a565b61077b565b9050919050565b600061087182610844565b9050919050565b600061088382610866565b9050919050565b61089381610878565b82525050565b60006020820190506108ae600083018461088a565b92915050565b6108bd8161079b565b82525050565b60006020820190506108d860008301846108b4565b92915050565b6108e781610806565b81146108f257600080fd5b50565b600081359050610904816108de565b92915050565b6000602082840312156109205761091f610776565b5b600061092e848285016108f5565b91505092915050565b600082825260208201905092915050565b7f6469646e27742073656e6420656e6f756768204554482e000000000000000000600082015250565b600061097e601783610937565b915061098982610948565b602082019050919050565b600060208201905081810360008301526109ad81610971565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ee82610806565b91506109f983610806565b9250828201905080821115610a1157610a106109b4565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a5182610806565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a8357610a826109b4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610ad8600083610abd565b9150610ae382610ac8565b600082019050919050565b6000610af982610acb565b9150819050919050565b7f43616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b6000610b39600b83610937565b9150610b4482610b03565b602082019050919050565b60006020820190508181036000830152610b6881610b2c565b9050919050565b6000610b7a82610806565b9150610b8583610806565b9250828202610b9381610806565b91508282048414831517610baa57610ba96109b4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610beb82610806565b9150610bf683610806565b925082610c0657610c05610bb1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c3081610c11565b8114610c3b57600080fd5b50565b600081519050610c4d81610c27565b92915050565b6000819050919050565b610c6681610c53565b8114610c7157600080fd5b50565b600081519050610c8381610c5d565b92915050565b600081519050610c98816108de565b92915050565b600080600080600060a08688031215610cba57610cb9610776565b5b6000610cc888828901610c3e565b9550506020610cd988828901610c74565b9450506040610cea88828901610c89565b9350506060610cfb88828901610c89565b9250506080610d0c88828901610c3e565b9150509295509295909350565b6000610d2482610c53565b9150610d2f83610c53565b9250828202610d3d81610c53565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d7557610d746109b4565b5b8282058414831517610d8a57610d896109b4565b5b509291505056fea2646970667358221220cd1678899806cc7a35a23c780399f4682d5d6071c76a9e52a0b703aa935f9b1464736f6c63430008130033",
  "devdoc": {
    "author": "Burhan Raja",
    "kind": "dev",
    "methods": {},
    "title": "A Smart Contract for Crowd Funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 68,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}